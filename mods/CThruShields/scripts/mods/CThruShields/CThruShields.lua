local mod = get_mod("CThruShields")

local a;local b;local c;local function d(e,f,g)local h=f*f-4*e*g;if h>=0 then local i=(-f+math.sqrt(h))/(2*e)local j=(-f-math.sqrt(h))/(2*e)return i,j else return nil end end;local k=function(l)local m=Managers.state.extension:system("fade_system")if not m then return end;local n=Managers.world:world("level_world")if Unit.alive(b)and b~=l then m:on_remove_extension(b)end;b=l;m:on_add_extension(n,b)end;local o=function()local m=Managers.state.extension:system("fade_system")if m and Unit.alive(b)then pcall(m.on_remove_extension,m,b)b=nil end end;mod:hook_safe(CLASS.PlayerUnitWeaponExtension,"on_player_unit_spawn",function(self)local p=self._weapons.slot_primary;local q=p.weapon_template.name;if q:match("slabshield")then k(p.weapon_unit)end end)mod:hook_safe(CLASS.PlayerUnitWeaponExtension,"on_slot_wielded",function(self,r)if r~="slot_primary"then return end;local s=self._weapons[r]local t=s.weapon_template.name;if t:match("slabshield")then k(s.weapon_unit)end end)local u=1;local v=-1;local w=-math.sqrt(0.0625)local function x(y)return math.floor(y*10+0.5)/10 end;local z=function()if not a or not Unit.alive(a.player_unit)then if Managers.player and Managers.player.local_player_safe and Managers.player:local_player_safe(1)then a=Managers.player:local_player_safe(1)else return end end;if not c then if Managers.state and Managers.state.camera then c=Managers.state.camera._current_trees else return end end;local m=Managers.state.extension:system("fade_system")if not m then return end;local A=ScriptUnit.has_extension(a.player_unit,"unit_data_system")local B=A:read_component("block")local C=c[a.viewport_name]=="first_person"local D=B.is_blocking;m:set_min_fade(b,D and C and(alpha and beta and(alpha+beta)/2+x(w))or 0)end;mod.on_game_state_changed=function(E,F)if b and F=="StateGameplay"and E=="exit"then o()end end;mod.update=function()if alpha and Managers.ui and Managers.ui:get_current_sub_state_name()=="GameplayStateRun"and Unit.alive(b)then z()end end;mod.on_all_mods_loaded=function()alpha,beta=d(u,v,w)end;local alpha,beta